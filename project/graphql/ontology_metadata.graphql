type Ontology implements RequiredMetadata, RecommendedMetadata, OptionalMetadata
  {
    purl: Uriorcurie!
    title: String!
    preferredPrefix: String!
    acronym: String
    license: Uriorcurie!
    creator: [Uriorcurie]!
    versionInfo: String!
    versionIRI: String
    versionNotes: String!
    created: String!
    modificationDate: [String]!
    description: String!
    issueTracker: String!
    documentation: String!
    imports: String!
    contributor: [Uriorcurie]
    contactInfo: String
    fundingInfo: String
    audience: String
    domainCovered: String
    languageCovered: String
    languageExpressedIn: String
    status: String
    sourceRepository: String
    distributions: String
    applicationExample: String
    references: String
    citations: String
    derivedFrom: [String]
    rootTerms: String
    relatedVersions: String
    socialMediaAccount: String
    identifierPattern: String
    format: String
    homepage: String
    publisher: String
    comments: String
    exampleIdentifier: String
    exampleClass: String
    mailingList: String
    logo: String
    otherIdentifier: String
    developmentEnvironment: String
    mappingRessources: String
    competencyQuestions: String
    appliedMethodology: String
    alternativeTitle: String
    alternativePrefix: String
  }

interface OptionalMetadata
  {
    relatedVersions: String
    socialMediaAccount: String
    identifierPattern: String
    format: String
    homepage: String
    publisher: String
    comments: String
    exampleIdentifier: String
    exampleClass: String
    mailingList: String
    logo: String
    otherIdentifier: String
    developmentEnvironment: String
    mappingRessources: String
    competencyQuestions: String
    appliedMethodology: String
    alternativeTitle: String
    alternativePrefix: String
  }

interface RecommendedMetadata
  {
    contributor: [Uriorcurie]
    contactInfo: String
    fundingInfo: String
    audience: String
    domainCovered: String
    languageCovered: String
    languageExpressedIn: String
    status: String
    sourceRepository: String
    distributions: String
    applicationExample: String
    references: String
    citations: String
    derivedFrom: [String]
    rootTerms: String
  }

interface RequiredMetadata
  {
    purl: Uriorcurie!
    title: String!
    preferredPrefix: String!
    acronym: String
    license: Uriorcurie!
    creator: [Uriorcurie]!
    versionInfo: String!
    versionIRI: String
    versionNotes: String!
    created: String!
    modificationDate: [String]!
    description: String!
    issueTracker: String!
    documentation: String!
    imports: String!
  }

type SkosConceptScheme implements RequiredMetadata, RecommendedMetadata, OptionalMetadata
  {
    purl: Uriorcurie!
    title: String!
    preferredPrefix: String!
    acronym: String
    license: Uriorcurie!
    creator: [Uriorcurie]!
    versionInfo: String!
    versionIRI: String
    versionNotes: String!
    created: String!
    modificationDate: [String]!
    description: String!
    issueTracker: String!
    documentation: String!
    imports: String!
    contributor: [Uriorcurie]
    contactInfo: String
    fundingInfo: String
    audience: String
    domainCovered: String
    languageCovered: String
    languageExpressedIn: String
    status: String
    sourceRepository: String
    distributions: String
    applicationExample: String
    references: String
    citations: String
    derivedFrom: [String]
    rootTerms: String
    relatedVersions: String
    socialMediaAccount: String
    identifierPattern: String
    format: String
    homepage: String
    publisher: String
    comments: String
    exampleIdentifier: String
    exampleClass: String
    mailingList: String
    logo: String
    otherIdentifier: String
    developmentEnvironment: String
    mappingRessources: String
    competencyQuestions: String
    appliedMethodology: String
    alternativeTitle: String
    alternativePrefix: String
  }

